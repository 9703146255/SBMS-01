package in.thiruit.rest;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import in.thiruit.entity.Student;
import in.thiruit.service.StudentService;

@RestController
@RequestMapping("/api1")
@CrossOrigin(origins = "http://localhost:3000")
public class StudentRestController {

	@Autowired
	private StudentService studentService;

	@GetMapping("/students")
	public List<Student> getAllStudents() {
		List<Student> allStudents = studentService.getAllStudents();

		return allStudents;
	}

	@PostMapping("/student")
	public ResponseEntity<Map<String, String>> addStudents(@RequestBody Student student) {
	    Map<String, String> response = new HashMap<>();
	    if (studentService.insertStudents(student)) {
	        response.put("message", "Student registered successfully");
	        return ResponseEntity.ok(response);
	    } else {
	        response.put("message", "Failed to register student");
	        return ResponseEntity.status(500).body(response);
	    }
	}


	@PutMapping("/{id}")
	public ResponseEntity<Student> updateStudent(@PathVariable Long id, @RequestBody Student updatedStudent) {
		Student student = studentService.updateStudent(id, updatedStudent);
		return ResponseEntity.ok(student);
	}
	
	@DeleteMapping("/students/{id}")
	public ResponseEntity<String> deleteStudent(@PathVariable Long id) {
	    boolean deleted = studentService.deleteStudentById(id);
	    if (deleted) {
	        return ResponseEntity.ok("Student deleted successfully");
	    } else {
	        return ResponseEntity.status(404).body("Student not found");
	    }
	}


}
