Spring:
-------
Spring is also called as a application develop project.

By using spring we can develop below types of the applications

	1) Standalone applications
	2) Web Apps
	3) Distributed apps

Spring is a free and open source software.

Spring is developed in modular fashion.

Spring is coming into the picture/market in the year of 2014(1.0).

Latest/current version of the spring is 6.x.

Spring is non-invasive framework(spring not forcing to use all the module in the project).

spring is versatile framework(struts,hiberanate)

if we develop any application by using spring framework.
 Programmer responsibility to manage the configurations(spring-beans.xml).

Every project configurations are the common. 
if we are having common logic means why we need to write(we can automate)

spring  team is realized if we having common logic we can automate those logic.

spring team introduced the spring boot framework in the market.


Spring Boot:
-----------
Spring boot is an approach to develop the applications with less configurations.


Spring Boot is the extension of spring frame work.

Spring Boot internally uses spring frame only.

What type of the applications we can develop by using spring, 
same kind of the applications we can develop by using spring boot also.


Spring  = primary logic + Business logic + configurations

Sprng boot= primary logic + Business logic - configurations

Sprng boot= Spring Framework - configurations.

Advantages of the Spring Boot:
-----------------------------
1) Auto Configurations.
2) POM Starters.
3) Embedded Server(In-built servers).
4) Rapid application development.
5) Actuators
6) No need to mention versions also.


1) Auto Configurations(Custom/User beans + Predefined):
-----------------------
Automatically ioc container is going to identify spring bean classes based on the annotations+dependencies.

spring-starter-web 		-->   It is goint to start tomcat server.
spring-starter-mysql    -->   It is used to create the connection pool.(10)
spring-starter-mail     -->   It is used to create the smtp connections.
spring-starter-security -->   It is used to provide login page.


POM Starters:
-------------
Pom starter nothing but dependencies.

Embedded Server:
----------------
Embedded Server nothing but inbuilt servers. 
spring boot is providing the ready made server for the application development.

ex: tomcat,jetty,netty.....

Rapid application development:
------------------------------
	Rapid application development nothing but, We can develop applications quickly.

	When we are developing the applications we need to consontrate on business logic.

Actuators:
----------
Actuators are used to monitor and manage our application.
Actuators is built in concept.

How classes loaded
How many objects created
How many threads are running
what are urls available in the project
what is the heap dump
what is the thread dump.
what is the health of our project
we can stop our application

versions:
---------
No need to metion versions in the spring boot, 

based on the parent starter it will downlaod child dependecies.

How many ways we can create the spring app
------------------------------------------
1) By using IDE(Eclipse(install pluggin),Sts,Intellij).
2) start.spring.io



What is start class in the spring boot
-------------------------------------
When we create the spring boot application by default we will get main class this called as start class in the spring boot.

Start class is the entry point for the spring boot application execution.

@SpringBootApplication:
-----------------------
@EnableAutoConfiguration
@SpringBootConfiguration  OR @Configuration
@ComponentScan


@EnableAutoConfiguration:
-------------------------
Automatically ioc container is going to identify spring bean classes based on the annotations+dependencies.


@SpringBootConfiguration  OR @Configuration
--------------------------------------------------
I dont give chance to the ioc container for the object creation.

I will create the object and i will give the my object to the ioc container.

when we creating the configuration class at the method level we need place @bean annotation.

EX: SecuiryConfig, KafkaConfig, RedisConfig, SwaggerConfig......

@ComponentScan:
---------------
The process of scanning packages for the beans object creation called component scanning.

First scanning will be start from base package.

Base package: The package which contains the start class (in.thiruit)

Sub package : The package which start from the base package (in.thiruit.service.ojdsj)...


Spring
SpringBOOT
Advantages compared spring app
	AutoConfiguration
	Pom starters
	Embedded Servers
	Rapid application development
	Actuators
	Versions Conflicts
How many ways we can create the spring boot app
1) IDE
2) start.spring.io(spring Initiolizer website)
what is the start class in the spring boot.
@SpringBootApplication
	@EnableAutoConfiguration
	@SpringBootConfiguration  OR @Configuration
	@ComponentScan


@Component
@Service
@Repository

@RestController
@Controller

@Configuration
@Bean

Run Method:[bootstrap logic]
------------
start the stop watch
start listeners

prepare the environment
print the banner

create ioc container
refresh the ioc container

stop the stopwatch(Total time)[currnt time -start time]
return ioc contaner object




ConfigurableApplicationContext --> standalone apps
ConfigurableWebServeletApplicationContext --> webapps
ConfigurablerReactiveWebServerApplicationContext --> reactive

Banner in the spring boot:
-------------------------
When we execute/run the springboot application, spring logo will be printed on the console.

This logo called as banner in the springboot.

-> If we want to customize we can customize the banner.

-> in the src/main/resources we need to create banner.txt file

-> we can generate our own logo in the below url

https://devops.datenkollektiv.de/banner.txt/index.html

-> Once we generate the logo we need copy paste on banner.txt file

-> we can run our spring boot app our own banner will be printed on the console.


Banner modes:
-------------
Banner having 3 modes
1) Console mode(default mode)
2) log
3) off

Runners:
--------
If we want to execute any logic only once. when ever application got started.
 than we should go for runners concepts.

Ex: When ever spring boot app started i want to load the data from the data base and show on the ui page.

When ever application started i want to send some emails to the students.

When ever application started i want to send some Greetings to the students/customers.


Types of runners:
----------------
1) Command Line runners
2) Application runner

->Both are functional interface.

->Functional Interface: FI which is having only one abstract method(SAM).

->abstract method: Which is containe only method declaration.

1) Command Line runners:
-------------------------
CLR is FI.
Which is having only one abstaract method.
void run(String... args) throws Exception;


2) Application runner:
-----------------------
AR is FI.
Which is having only one abstaract method.
void run(ApplicationArguments args) throws Exception;


Annotations:
------------

Annotation:
-----------
			Annotation nothin but metadata.
			Metadata: Data about the data.

Annotaions(SpringBoot) = (Sprint)
<bean id="cp" class="in.thiruit.CreditCardPayment"> </bean>
<bean id="cp" class="in.thiruit.PetrolEngine"> </bean>
<bean id="cp" class="in.thiruit.DesielEngine"> </bean>


Steriotype annotations:
------------------------
@Component
@Service
@Repository

@Controller
@RestController

@Configuration
@Bean


@Component:
----------
 It is general type of annotation.
 If we want to represent our java class as a spring bean.


 @Service:
 ---------
 It is also used to represent our java class as a spring bean.

 This annotation we need to use in the business layer.

 It is used scan automatically implementation classes.

 @Repository:
 ------------
 It is also used to represent our java class as a spring bean.

 In the Dao or Repository class/interface we are goint to use  @Repository annotation.


 @Controller:
 ------------
 In the web applications if we want to represent our java class as a web componet
 than we can use @Controller annotation.

 For C2B Communication we can use @Controller

 Ex: Customer --> Flipkart(Business)
 	 Customer --> Amazon(Business)

  @RestController:
  ------------
  In the distributed applications, if we want to represent our java class as a distributed component then we can use @RestController annotation.

  For B2B Communication we can use @RestController

  Ex: 
  PhonePay -->  CanaraBank
  Paytm    -->  HDFC


@Configuration:
----------------
@Configuration or @SpringBootConfiguration

If we want represent our java class a configuration class then we can @Configuration annotation.

If we wants to customize the object creation than also we can use @configuration annotation and method level we need to use @Bean.

we can use @Bean annotation in any class but recommended to use in the configuration class.


@Bean:
------
It is used to create custom objects.
all the above annotations are class level but @Bean is a method level annotation.

@Scope:
-------
How many objects got created for spring bean class

we are having 4 types of the scopes:
------------------------------------
Singletone
Prototype
Request
Session


@Autowired
@Qualifier
@Primary
@Scope



Wiring:
-------
1)Manual wiring:
----------------
When we are performing manual wiring programmer need to tell to the IOC container which one is depend class and which one is target class
using ref attribute.

2) Autowing:
------------
Autowiring nothing but dependency injection\
The process of injecting one class object into another class object called autoring

1)Setter Injection
2)Constructor Injection
3)Field Injection

1)Setter Injection:
-------------------
The process of injecting dependent class object into target class object by using target class setter method called SI.


2)Constructor Injection:
------------------------
The process of injecting dependent class object into target class object by using target class constructor called CI.

When we have only parameteraised constructor Autowired annotation is optional
When we have 0-param,Param at the time Autowired annotation is mandatory otherwise ioc contaner will take the 0-param constructor for the object creation. than we will get the null pointer exception.


1)Field Injection:
-------------------
The process of injecting dependent class object into target class object by using target class Field called FI.

















	





























